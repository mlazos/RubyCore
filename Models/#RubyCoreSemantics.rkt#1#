#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 30 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 62 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 24 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 147 255 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 147 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 -1 1 #"\0"
0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1
          0 2912 0 29 3 12 #"#lang racket"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 7 #"require"
0 0 26 3 1 #" "
0 0 14 3 5 #"redex"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 7 #"require"
0 0 26 3 1 #" "
0 0 14 3 24 #"test-engine/racket-tests"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 15 #"define-language"
0 0 26 3 1 #" "
0 0 14 3 9 #"ruby-core"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 18 3 19 #";atomic expressions"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 2 #"ae"
0 0 26 3 1 #" "
0 0 14 3 6 #"number"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"      "
0 0 14 3 6 #"string"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 6 #"      "
0 0 14 3 7 #"boolean"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"      "
0 0 14 3 5 #"empty"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 4 #"list"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 1 #" "
0 0 14 3 5 #"empty"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 3 #"clo"
0 0 26 3 1 #" "
0 0 14 3 4 #"func"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 2 #"ce"
0 0 26 3 2 #" ("
0 0 16 3 2 #"do"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 1 #"+"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"      "
0 0 18 3 6 #";apply"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 3 #"app"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"      "
0 0 18 3 17 #";apply with block"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 5 #"app-b"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 3 #"ret"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 16 3 3 #"let"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"      "
0 0 14 3 4 #"func"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"      "
0 0 14 3 1 #"x"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 4 #"func"
0 0 26 3 2 #" ("
0 0 14 3 3 #"lam"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 2 #") "
0 0 14 3 1 #"e"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 4 #"proc"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 2 #") "
0 0 14 3 1 #"e"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 18 3 18 #";contexts         "
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 1 #"E"
0 0 26 3 2 #" ("
0 0 16 3 2 #"do"
0 0 26 3 1 #" "
0 0 14 3 4 #"hole"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 1 #"+"
0 0 26 3 1 #" "
0 0 14 3 4 #"hole"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 14 3 4 #"hole"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"      "
0 0 18 3 6 #";apply"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 3 #"app"
0 0 26 3 1 #" "
0 0 14 3 2 #"ae"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 1 #" "
0 0 14 3 4 #"hole"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"      "
0 0 18 3 17 #";apply with block"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 5 #"app-b"
0 0 26 3 1 #" "
0 0 14 3 4 #"hole"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 3 #"ret"
0 0 26 3 1 #" "
0 0 14 3 4 #"hole"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 16 3 3 #"let"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 4 #"hole"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 18 3 16 #";all expressions"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 1 #"e"
0 0 26 3 1 #" "
0 0 14 3 2 #"ce"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"     "
0 0 14 3 2 #"ae"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 18 3 26 #";configuration definitions"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"sto"
0 0 26 3 3 #" (("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 2 #"ae"
0 0 26 3 2 #") "
0 0 14 3 3 #"..."
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"env"
0 0 26 3 3 #" (("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 2 #") "
0 0 14 3 3 #"..."
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 4 #"kont"
0 0 26 3 2 #" ("
0 0 14 3 4 #"k-do"
0 0 26 3 1 #" "
0 0 14 3 1 #"E"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 2 #") "
0 0 18 3 23 #";keep environment if do"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 5 #"k-ret"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 2 #") "
0 0 18 3 30 #";originating from a block call"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 1 #"k"
0 0 26 3 1 #" "
0 0 14 3 1 #"E"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 2 #") "
0 0 18 3 22 #";normal control point "
0 0 26 29 1 #"\n"
0 0 26 3 8 #"        "
0 0 14 3 4 #"halt"
0 0 26 3 2 #") "
0 0 18 3 10 #";base case"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 2 #"CF"
0 0 26 3 2 #" ("
0 0 14 3 1 #"e"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 32 #"variable-not-otherwise-mentioned"
0 0 26 3 4 #"))  "
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 6 #"rc-red"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 18 #"reduction-relation"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 14 3 9 #"ruby-core"
0 0 26 3 1 #" "
0 0 24 3 8 #"#:domain"
0 0 26 3 1 #" "
0 0 14 3 2 #"CF"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 18 3 20 #";final configuration"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 18 3 23 #";(--> (ae env sto halt)"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 18 3 46 #";atomic expression - call current continuation"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 3 #"-->"
0 0 26 3 2 #" ("
0 0 14 3 2 #"ae"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 2 #" ("
0 0 14 3 1 #"k"
0 0 26 3 1 #" "
0 0 14 3 1 #"E"
0 0 26 3 1 #" "
0 0 14 3 5 #"env_k"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        (("
0 0 14 3 7 #"in-hole"
0 0 26 3 1 #" "
0 0 14 3 1 #"E"
0 0 26 3 1 #" "
0 0 14 3 2 #"ae"
0 0 26 3 2 #") "
0 0 14 3 5 #"env_k"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"        "
0 0 14 3 4 #"cont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 3 #"-->"
0 0 26 3 2 #" ("
0 0 14 3 2 #"ae"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 2 #" ("
0 0 14 3 4 #"k-do"
0 0 26 3 1 #" "
0 0 14 3 1 #"E"
0 0 26 3 1 #" "
0 0 14 3 5 #"env_k"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        (("
0 0 14 3 7 #"in-hole"
0 0 26 3 1 #" "
0 0 14 3 1 #"E"
0 0 26 3 1 #" "
0 0 14 3 2 #"ae"
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"        "
0 0 14 3 7 #"cont-do"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 3 #"-->"
0 0 26 3 2 #" ("
0 0 14 3 2 #"ae"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 2 #" ("
0 0 14 3 5 #"k-ret"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 3 #")) "
0 0 18 3 31 #";; if ret wasn't called, ignore"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 2 #"ae"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"        "
0 0 14 3 8 #"cont-ret"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 18 3 35 #";lambdas and procs - create closure"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 3 #"-->"
0 0 26 3 2 #" ("
0 0 14 3 4 #"func"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        (("
0 0 14 3 3 #"clo"
0 0 26 3 1 #" "
0 0 14 3 4 #"func"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"        "
0 0 14 3 11 #"func-create"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 18 3 10 #";id lookup"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 3 #"-->"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 6 #"ae_ans"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 14 #"side-condition"
0 0 26 3 2 #" ("
0 0 14 3 4 #"term"
0 0 26 3 2 #" ("
0 0 14 3 6 #"bound?"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 5 #"where"
0 0 26 3 1 #" "
0 0 14 3 6 #"ae_ans"
0 0 26 3 2 #" ("
0 0 14 3 6 #"lookup"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"        "
0 0 14 3 9 #"id-lookup"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 18 3 4 #";if "
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 3 #"-->"
0 0 26 3 3 #" (("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 22 3 2 #"#t"
0 0 26 3 1 #" "
0 0 14 3 3 #"e_t"
0 0 26 3 1 #" "
0 0 14 3 3 #"e_f"
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 3 #"e_t"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"        "
0 0 14 3 4 #"if-t"
0 0 26 3 4 #")   "
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 3 #"-->"
0 0 26 3 3 #" (("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 22 3 2 #"#f"
0 0 26 3 1 #" "
0 0 14 3 3 #"e_t"
0 0 26 3 1 #" "
0 0 14 3 3 #"e_f"
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 3 #"e_f"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"        "
0 0 14 3 4 #"if-f"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 3 #"-->"
0 0 26 3 3 #" (("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 14 3 2 #"ce"
0 0 26 3 1 #" "
0 0 14 3 3 #"e_t"
0 0 26 3 1 #" "
0 0 14 3 3 #"e_f"
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 2 #"ce"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 8 #"kont_new"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 5 #"where"
0 0 26 3 1 #" "
0 0 14 3 8 #"kont_new"
0 0 26 3 2 #" ("
0 0 14 3 8 #"gen-kont"
0 0 26 3 2 #" ("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 14 3 2 #"ce"
0 0 26 3 1 #" "
0 0 14 3 3 #"e_t"
0 0 26 3 1 #" "
0 0 14 3 3 #"e_f"
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"        "
0 0 14 3 7 #"if-expr"
0 0 26 3 4 #")   "
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 18 3 16 #";let            "
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 18 3 51 #";; handle case where bind exp needs to be evaluated"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 3 #"-->"
0 0 26 3 3 #" (("
0 0 16 3 3 #"let"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 2 #"ce"
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 2 #"ce"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 8 #"kont_new"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 5 #"where"
0 0 26 3 1 #" "
0 0 14 3 8 #"kont_new"
0 0 26 3 2 #" ("
0 0 14 3 8 #"gen-kont"
0 0 26 3 2 #" ("
0 0 16 3 3 #"let"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"        "
0 0 14 3 8 #"let-expr"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 18 3 26 #";; handle new binding case"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 3 #"-->"
0 0 26 3 3 #" (("
0 0 16 3 3 #"let"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 2 #"ae"
0 0 26 3 4 #") (("
0 0 14 3 3 #"x_1"
0 0 26 3 1 #" "
0 0 14 3 3 #"x_2"
0 0 26 3 2 #") "
0 0 14 3 3 #"..."
0 0 26 3 4 #") (("
0 0 14 3 3 #"x_3"
0 0 26 3 1 #" "
0 0 14 3 4 #"ae_1"
0 0 26 3 2 #") "
0 0 14 3 3 #"..."
0 0 26 3 2 #") "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 2 #"ae"
0 0 26 3 3 #" (("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 5 #"x_new"
0 0 26 3 3 #") ("
0 0 14 3 3 #"x_1"
0 0 26 3 1 #" "
0 0 14 3 3 #"x_2"
0 0 26 3 2 #") "
0 0 14 3 3 #"..."
0 0 26 3 4 #") (("
0 0 14 3 5 #"x_new"
0 0 26 3 1 #" "
0 0 14 3 2 #"ae"
0 0 26 3 3 #") ("
0 0 14 3 3 #"x_3"
0 0 26 3 1 #" "
0 0 14 3 4 #"ae_1"
0 0 26 3 2 #") "
0 0 14 3 3 #"..."
0 0 26 3 2 #") "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 14 #"side-condition"
0 0 26 3 2 #" ("
0 0 14 3 3 #"not"
0 0 26 3 2 #" ("
0 0 14 3 4 #"term"
0 0 26 3 2 #" ("
0 0 14 3 6 #"bound?"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 3 #" (("
0 0 14 3 3 #"x_1"
0 0 26 3 1 #" "
0 0 14 3 3 #"x_2"
0 0 26 3 2 #") "
0 0 14 3 3 #"..."
0 0 26 3 5 #")))))"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 5 #"where"
0 0 26 3 1 #" "
0 0 14 3 5 #"x_new"
0 0 26 3 1 #" "
0 0 29 3 1 #","
0 0 26 3 1 #"("
0 0 14 3 6 #"gensym"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"        "
0 0 14 3 8 #"let-bind"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 18 3 29 #";; handle update binding case"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 3 #"-->"
0 0 26 3 3 #" (("
0 0 16 3 3 #"let"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 2 #"ae"
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 2 #"ae"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 7 #"sto_new"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 14 #"side-condition"
0 0 26 3 2 #" ("
0 0 14 3 4 #"term"
0 0 26 3 2 #" ("
0 0 14 3 6 #"bound?"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 5 #"where"
0 0 26 3 1 #" "
0 0 14 3 7 #"sto_new"
0 0 26 3 2 #" ("
0 0 14 3 10 #"update-sto"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 2 #"ae"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"        "
0 0 14 3 10 #"let-update"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 18 3 4 #";app"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 3 #"-->"
0 0 26 3 3 #" (("
0 0 14 3 3 #"app"
0 0 26 3 1 #" "
0 0 14 3 2 #"ae"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 1 #" "
0 0 14 3 2 #"ce"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 2 #"ce"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 8 #"kont_new"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 5 #"where"
0 0 26 3 1 #" "
0 0 14 3 8 #"kont_new"
0 0 26 3 2 #" ("
0 0 14 3 8 #"gen-kont"
0 0 26 3 2 #" ("
0 0 14 3 3 #"app"
0 0 26 3 1 #" "
0 0 14 3 2 #"ae"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 1 #" "
0 0 14 3 2 #"ce"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"        "
0 0 14 3 9 #"app-exprs"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 3 #"-->"
0 0 26 3 3 #" (("
0 0 14 3 3 #"app"
0 0 26 3 2 #" ("
0 0 14 3 3 #"clo"
0 0 26 3 2 #" ("
0 0 14 3 3 #"lam"
0 0 26 3 2 #" ("
0 0 14 3 3 #"x_1"
0 0 26 3 1 #" "
0 0 14 3 3 #"x_2"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 2 #") "
0 0 14 3 6 #"e_body"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 21 #"                   (("
0 0 14 3 4 #"x_id"
0 0 26 3 1 #" "
0 0 14 3 6 #"x_loc1"
0 0 26 3 2 #") "
0 0 14 3 3 #"..."
0 0 26 3 3 #")) "
0 0 14 3 4 #"ae_1"
0 0 26 3 1 #" "
0 0 14 3 4 #"ae_2"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 9 #"         "
0 0 14 3 3 #"env"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"         (("
0 0 14 3 6 #"x_loc2"
0 0 26 3 1 #" "
0 0 14 3 4 #"ae_v"
0 0 26 3 2 #") "
0 0 14 3 3 #"..."
0 0 26 3 2 #") "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        (("
0 0 14 3 3 #"app"
0 0 26 3 2 #" ("
0 0 14 3 3 #"clo"
0 0 26 3 2 #" ("
0 0 14 3 3 #"lam"
0 0 26 3 2 #" ("
0 0 14 3 3 #"x_2"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 2 #") "
0 0 14 3 6 #"e_body"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 21 #"                   (("
0 0 14 3 3 #"x_1"
0 0 26 3 1 #" "
0 0 14 3 5 #"x_new"
0 0 26 3 3 #") ("
0 0 14 3 4 #"x_id"
0 0 26 3 1 #" "
0 0 14 3 6 #"x_loc1"
0 0 26 3 2 #") "
0 0 14 3 3 #"..."
0 0 26 3 3 #")) "
0 0 14 3 4 #"ae_2"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 9 #"         "
0 0 14 3 3 #"env"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"         (("
0 0 14 3 5 #"x_new"
0 0 26 3 1 #" "
0 0 14 3 4 #"ae_1"
0 0 26 3 3 #") ("
0 0 14 3 6 #"x_loc2"
0 0 26 3 1 #" "
0 0 14 3 4 #"ae_v"
0 0 26 3 2 #") "
0 0 14 3 3 #"..."
0 0 26 3 2 #") "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 14 #"side-condition"
0 0 26 3 2 #" ("
0 0 14 3 1 #"="
0 0 26 3 2 #" ("
0 0 14 3 6 #"length"
0 0 26 3 2 #" ("
0 0 14 3 4 #"term"
0 0 26 3 2 #" ("
0 0 14 3 3 #"x_1"
0 0 26 3 1 #" "
0 0 14 3 3 #"x_2"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 5 #"))) ("
0 0 14 3 6 #"length"
0 0 26 3 2 #" ("
0 0 14 3 4 #"term"
0 0 26 3 2 #" ("
0 0 14 3 4 #"ae_1"
0 0 26 3 1 #" "
0 0 14 3 4 #"ae_2"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 5 #")))))"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 5 #"where"
0 0 26 3 1 #" "
0 0 14 3 5 #"x_new"
0 0 26 3 1 #" "
0 0 29 3 1 #","
0 0 26 3 1 #"("
0 0 14 3 6 #"gensym"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"        "
0 0 14 3 7 #"app-lam"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 3 #"-->"
0 0 26 3 3 #" (("
0 0 14 3 3 #"app"
0 0 26 3 2 #" ("
0 0 14 3 3 #"clo"
0 0 26 3 2 #" ("
0 0 14 3 3 #"lam"
0 0 26 3 4 #" () "
0 0 14 3 6 #"e_body"
0 0 26 3 2 #") "
0 0 14 3 5 #"env_c"
0 0 26 3 3 #")) "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 6 #"e_body"
0 0 26 3 1 #" "
0 0 14 3 5 #"env_c"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"        "
0 0 14 3 15 #"app-lam-no-args"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 3 #"-->"
0 0 26 3 3 #" (("
0 0 14 3 3 #"app"
0 0 26 3 2 #" ("
0 0 14 3 3 #"clo"
0 0 26 3 2 #" ("
0 0 14 3 3 #"lam"
0 0 26 3 2 #" ("
0 0 14 3 3 #"x_1"
0 0 26 3 1 #" "
0 0 14 3 3 #"x_2"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 2 #") "
0 0 14 3 6 #"e_body"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 21 #"                   (("
0 0 14 3 4 #"x_id"
0 0 26 3 1 #" "
0 0 14 3 6 #"x_loc1"
0 0 26 3 2 #") "
0 0 14 3 3 #"..."
0 0 26 3 3 #")) "
0 0 14 3 4 #"ae_1"
0 0 26 3 1 #" "
0 0 14 3 4 #"ae_2"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 9 #"         "
0 0 14 3 3 #"env"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"         (("
0 0 14 3 6 #"x_loc2"
0 0 26 3 1 #" "
0 0 14 3 4 #"ae_v"
0 0 26 3 2 #") "
0 0 14 3 3 #"..."
0 0 26 3 2 #") "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        (("
0 0 14 3 3 #"app"
0 0 26 3 2 #" ("
0 0 14 3 3 #"clo"
0 0 26 3 2 #" ("
0 0 14 3 3 #"lam"
0 0 26 3 2 #" ("
0 0 14 3 3 #"x_2"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 2 #") "
0 0 14 3 6 #"e_body"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 21 #"                   (("
0 0 14 3 3 #"x_1"
0 0 26 3 1 #" "
0 0 14 3 5 #"x_new"
0 0 26 3 3 #") ("
0 0 14 3 4 #"x_id"
0 0 26 3 1 #" "
0 0 14 3 6 #"x_loc1"
0 0 26 3 2 #") "
0 0 14 3 3 #"..."
0 0 26 3 3 #")) "
0 0 14 3 4 #"ae_2"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 9 #"         "
0 0 14 3 3 #"env"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"         (("
0 0 14 3 5 #"x_new"
0 0 26 3 1 #" "
0 0 14 3 4 #"ae_1"
0 0 26 3 3 #") ("
0 0 14 3 6 #"x_loc2"
0 0 26 3 1 #" "
0 0 14 3 4 #"ae_v"
0 0 26 3 2 #") "
0 0 14 3 3 #"..."
0 0 26 3 2 #") "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 14 #"side-condition"
0 0 26 3 2 #" ("
0 0 14 3 1 #"="
0 0 26 3 2 #" ("
0 0 14 3 6 #"length"
0 0 26 3 2 #" ("
0 0 14 3 4 #"term"
0 0 26 3 2 #" ("
0 0 14 3 3 #"x_1"
0 0 26 3 1 #" "
0 0 14 3 3 #"x_2"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 5 #"))) ("
0 0 14 3 6 #"length"
0 0 26 3 2 #" ("
0 0 14 3 4 #"term"
0 0 26 3 2 #" ("
0 0 14 3 4 #"ae_1"
0 0 26 3 1 #" "
0 0 14 3 4 #"ae_2"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 5 #")))))"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 5 #"where"
0 0 26 3 1 #" "
0 0 14 3 5 #"x_new"
0 0 26 3 1 #" "
0 0 29 3 1 #","
0 0 26 3 1 #"("
0 0 14 3 6 #"gensym"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"        "
0 0 14 3 8 #"app-proc"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 26 29 1 #"\n"
0 0 26 3 47 #"                                               "
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 18 3 3 #";do"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 3 #"-->"
0 0 26 3 3 #" (("
0 0 16 3 2 #"do"
0 0 26 3 1 #" "
0 0 14 3 2 #"ce"
0 0 26 3 1 #" "
0 0 14 3 3 #"e_1"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 2 #"ce"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 8 #"kont_new"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 5 #"where"
0 0 26 3 1 #" "
0 0 14 3 8 #"kont_new"
0 0 26 3 2 #" ("
0 0 14 3 8 #"gen-kont"
0 0 26 3 2 #" ("
0 0 16 3 2 #"do"
0 0 26 3 1 #" "
0 0 14 3 2 #"ce"
0 0 26 3 1 #" "
0 0 14 3 3 #"e_1"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 3 #"-->"
0 0 26 3 3 #" (("
0 0 16 3 2 #"do"
0 0 26 3 1 #" "
0 0 14 3 2 #"ae"
0 0 26 3 1 #" "
0 0 14 3 3 #"e_1"
0 0 26 3 1 #" "
0 0 14 3 3 #"e_2"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        (("
0 0 16 3 2 #"do"
0 0 26 3 1 #" "
0 0 14 3 3 #"e_1"
0 0 26 3 1 #" "
0 0 14 3 3 #"e_2"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 3 #"-->"
0 0 26 3 3 #" (("
0 0 16 3 2 #"do"
0 0 26 3 1 #" "
0 0 14 3 2 #"ae"
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 2 #"ae"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 18 3 7 #";return"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 3 #"-->"
0 0 26 3 3 #" (("
0 0 14 3 3 #"ret"
0 0 26 3 1 #" "
0 0 14 3 2 #"ae"
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 2 #" ("
0 0 14 3 5 #"k-ret"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 2 #"ae"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 3 #"-->"
0 0 26 3 3 #" (("
0 0 14 3 3 #"ret"
0 0 26 3 1 #" "
0 0 14 3 2 #"ae"
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 2 #" ("
0 0 14 3 1 #"k"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        (("
0 0 14 3 3 #"ret"
0 0 26 3 1 #" "
0 0 14 3 2 #"ae"
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 3 #"-->"
0 0 26 3 3 #" (("
0 0 14 3 3 #"ret"
0 0 26 3 1 #" "
0 0 14 3 2 #"ae"
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 2 #" ("
0 0 14 3 4 #"k-do"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"        (("
0 0 14 3 3 #"ret"
0 0 26 3 1 #" "
0 0 14 3 2 #"ae"
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 3 #"-->"
0 0 26 3 3 #" (("
0 0 14 3 3 #"ret"
0 0 26 3 1 #" "
0 0 14 3 2 #"ce"
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 2 #"ce"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 8 #"kont_new"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 5 #"where"
0 0 26 3 1 #" "
0 0 14 3 8 #"kont_new"
0 0 26 3 2 #" ("
0 0 14 3 8 #"gen-kont"
0 0 26 3 2 #" ("
0 0 14 3 3 #"ret"
0 0 26 3 1 #" "
0 0 14 3 2 #"ce"
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 18 3 6 #";yield"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 26 29 1 #"\n"
0 0 26 3 5 #"   ))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 52 #";;------------------ metafunctions -----------------"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 19 #"define-metafunction"
0 0 26 3 1 #" "
0 0 14 3 9 #"ruby-core"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 14 3 8 #"gen-kont"
0 0 26 3 1 #" "
0 0 14 3 1 #":"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 1 #" "
0 0 14 3 2 #"->"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 2 #"  "
0 0 26 29 1 #"\n"
0 0 26 3 4 #"  [("
0 0 14 3 8 #"gen-kont"
0 0 26 3 2 #" ("
0 0 14 3 3 #"app"
0 0 26 3 1 #" "
0 0 14 3 2 #"ae"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 1 #" "
0 0 14 3 2 #"ce"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 1 #"k"
0 0 26 3 2 #" ("
0 0 14 3 3 #"app"
0 0 26 3 1 #" "
0 0 14 3 2 #"ae"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 1 #" "
0 0 14 3 4 #"hole"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 2 #")]"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"  [("
0 0 14 3 8 #"gen-kont"
0 0 26 3 2 #" ("
0 0 16 3 2 #"do"
0 0 26 3 1 #" "
0 0 14 3 3 #"e_1"
0 0 26 3 1 #" "
0 0 14 3 3 #"e_2"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 4 #"k-do"
0 0 26 3 2 #" ("
0 0 16 3 2 #"do"
0 0 26 3 1 #" "
0 0 14 3 4 #"hole"
0 0 26 3 1 #" "
0 0 14 3 3 #"e_2"
0 0 26 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 3 #")] "
0 0 18 3 24 #";remove first expression"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"  [("
0 0 14 3 8 #"gen-kont"
0 0 26 3 2 #" ("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #" "
0 0 14 3 3 #"e_t"
0 0 26 3 1 #" "
0 0 14 3 3 #"e_f"
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 1 #"k"
0 0 26 3 2 #" ("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 14 3 4 #"hole"
0 0 26 3 1 #" "
0 0 14 3 3 #"e_t"
0 0 26 3 1 #" "
0 0 14 3 3 #"e_f"
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 2 #")]"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"  [("
0 0 14 3 8 #"gen-kont"
0 0 26 3 2 #" ("
0 0 14 3 3 #"ret"
0 0 26 3 1 #" "
0 0 14 3 2 #"ce"
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 1 #"k"
0 0 26 3 2 #" ("
0 0 14 3 3 #"ret"
0 0 26 3 1 #" "
0 0 14 3 4 #"hole"
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 2 #")]"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"  [("
0 0 14 3 8 #"gen-kont"
0 0 26 3 2 #" ("
0 0 16 3 3 #"let"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 1 #"k"
0 0 26 3 2 #" ("
0 0 16 3 3 #"let"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 4 #"hole"
0 0 26 3 2 #") "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 3 #")])"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 37 #";env can't be empty if this is called"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 19 #"define-metafunction"
0 0 26 3 1 #" "
0 0 14 3 9 #"ruby-core"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 14 3 10 #"env-lookup"
0 0 26 3 1 #" "
0 0 14 3 1 #":"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 2 #"->"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"  [("
0 0 14 3 10 #"env-lookup"
0 0 26 3 1 #" "
0 0 14 3 3 #"x_s"
0 0 26 3 3 #" (("
0 0 14 3 3 #"x_1"
0 0 26 3 1 #" "
0 0 14 3 3 #"x_2"
0 0 26 3 3 #") ("
0 0 14 3 3 #"x_3"
0 0 26 3 1 #" "
0 0 14 3 3 #"x_4"
0 0 26 3 2 #") "
0 0 14 3 3 #"..."
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 29 3 1 #","
0 0 26 3 1 #"("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 26 3 2 #" ("
0 0 14 3 4 #"term"
0 0 26 3 1 #" "
0 0 14 3 3 #"x_s"
0 0 26 3 3 #") ("
0 0 14 3 4 #"term"
0 0 26 3 1 #" "
0 0 14 3 3 #"x_1"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 4 #"term"
0 0 26 3 1 #" "
0 0 14 3 3 #"x_2"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 4 #"term"
0 0 26 3 2 #" ("
0 0 14 3 10 #"env-lookup"
0 0 26 3 1 #" "
0 0 14 3 3 #"x_s"
0 0 26 3 3 #" (("
0 0 14 3 3 #"x_3"
0 0 26 3 1 #" "
0 0 14 3 3 #"x_4"
0 0 26 3 2 #") "
0 0 14 3 3 #"..."
0 0 26 3 6 #"))))])"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 36 #";sto can't be empty due to side-cond"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 19 #"define-metafunction"
0 0 26 3 1 #" "
0 0 14 3 9 #"ruby-core"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 14 3 10 #"sto-lookup"
0 0 26 3 1 #" "
0 0 14 3 1 #":"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 2 #"->"
0 0 26 3 1 #" "
0 0 14 3 2 #"ae"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"  [("
0 0 14 3 10 #"sto-lookup"
0 0 26 3 1 #" "
0 0 14 3 3 #"x_s"
0 0 26 3 3 #" (("
0 0 14 3 3 #"x_1"
0 0 26 3 1 #" "
0 0 14 3 4 #"ae_1"
0 0 26 3 3 #") ("
0 0 14 3 3 #"x_2"
0 0 26 3 1 #" "
0 0 14 3 4 #"ae_2"
0 0 26 3 2 #") "
0 0 14 3 3 #"..."
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 29 3 1 #","
0 0 26 3 1 #"("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 26 3 2 #" ("
0 0 14 3 4 #"term"
0 0 26 3 1 #" "
0 0 14 3 3 #"x_s"
0 0 26 3 3 #") ("
0 0 14 3 4 #"term"
0 0 26 3 1 #" "
0 0 14 3 3 #"x_1"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 4 #"term"
0 0 26 3 1 #" "
0 0 14 3 4 #"ae_1"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 4 #"term"
0 0 26 3 2 #" ("
0 0 14 3 10 #"sto-lookup"
0 0 26 3 1 #" "
0 0 14 3 3 #"x_s"
0 0 26 3 3 #" (("
0 0 14 3 3 #"x_2"
0 0 26 3 1 #" "
0 0 14 3 4 #"ae_2"
0 0 26 3 2 #") "
0 0 14 3 3 #"..."
0 0 26 3 6 #"))))])"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 36 #";env can't be empty due to side-cond"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 19 #"define-metafunction"
0 0 26 3 1 #" "
0 0 14 3 9 #"ruby-core"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 14 3 6 #"lookup"
0 0 26 3 1 #" "
0 0 14 3 1 #":"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 2 #"->"
0 0 26 3 1 #" "
0 0 14 3 2 #"ae"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"  [("
0 0 14 3 6 #"lookup"
0 0 26 3 1 #" "
0 0 14 3 3 #"x_s"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 2 #" )"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 10 #"sto-lookup"
0 0 26 3 2 #" ("
0 0 14 3 10 #"env-lookup"
0 0 26 3 1 #" "
0 0 14 3 3 #"x_s"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 2 #") "
0 0 14 3 3 #"sto"
0 0 26 3 3 #")])"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 38 #";store can't be empty due to side-cond"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 19 #"define-metafunction"
0 0 26 3 1 #" "
0 0 14 3 9 #"ruby-core"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 14 3 10 #"update-sto"
0 0 26 3 1 #" "
0 0 14 3 1 #":"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 2 #"ae"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 2 #"->"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"  [("
0 0 14 3 10 #"update-sto"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 2 #"ae"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 13 #"update-helper"
0 0 26 3 2 #" ("
0 0 14 3 10 #"env-lookup"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 2 #") "
0 0 14 3 2 #"ae"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 3 #")])"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 58
#";store can't be empty if this is called due to a side-cond"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 19 #"define-metafunction"
0 0 26 3 1 #" "
0 0 14 3 9 #"ruby-core"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 14 3 13 #"update-helper"
0 0 26 3 1 #" "
0 0 14 3 1 #":"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 2 #"ae"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 2 #"->"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"[("
0 0 14 3 13 #"update-helper"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 2 #"ae"
0 0 26 3 3 #" (("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 4 #"ae_1"
0 0 26 3 3 #") ("
0 0 14 3 3 #"x_2"
0 0 26 3 1 #" "
0 0 14 3 4 #"ae_2"
0 0 26 3 2 #") "
0 0 14 3 3 #"..."
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #" (("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 2 #"ae"
0 0 26 3 3 #") ("
0 0 14 3 3 #"x_2"
0 0 26 3 1 #" "
0 0 14 3 4 #"ae_2"
0 0 26 3 2 #") "
0 0 14 3 3 #"..."
0 0 26 3 2 #")]"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"[("
0 0 14 3 13 #"update-helper"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 2 #"ae"
0 0 26 3 3 #" (("
0 0 14 3 3 #"x_1"
0 0 26 3 1 #" "
0 0 14 3 4 #"ae_1"
0 0 26 3 3 #") ("
0 0 14 3 3 #"x_2"
0 0 26 3 1 #" "
0 0 14 3 4 #"ae_2"
0 0 26 3 2 #") "
0 0 14 3 3 #"..."
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 2 #" ("
0 0 14 3 13 #"update-helper"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 2 #"ae"
0 0 26 3 3 #" (("
0 0 14 3 3 #"x_2"
0 0 26 3 1 #" "
0 0 14 3 4 #"ae_2"
0 0 26 3 2 #") "
0 0 14 3 3 #"..."
0 0 26 3 4 #"))])"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 19 #"define-metafunction"
0 0 26 3 1 #" "
0 0 14 3 9 #"ruby-core"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 14 3 6 #"bound?"
0 0 26 3 1 #" "
0 0 14 3 1 #":"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 2 #"->"
0 0 26 3 1 #" "
0 0 14 3 7 #"boolean"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"  [("
0 0 14 3 6 #"bound?"
0 0 26 3 1 #" "
0 0 14 3 3 #"x_f"
0 0 26 3 3 #" (("
0 0 14 3 3 #"x_f"
0 0 26 3 1 #" "
0 0 14 3 4 #"x_fa"
0 0 26 3 3 #") ("
0 0 14 3 3 #"x_2"
0 0 26 3 1 #" "
0 0 14 3 4 #"x_2a"
0 0 26 3 2 #") "
0 0 14 3 3 #"..."
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 22 3 2 #"#t"
0 0 26 3 1 #"]"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"  [("
0 0 14 3 6 #"bound?"
0 0 26 3 1 #" "
0 0 14 3 3 #"x_f"
0 0 26 3 3 #" (("
0 0 14 3 3 #"x_2"
0 0 26 3 1 #" "
0 0 14 3 4 #"x_2a"
0 0 26 3 3 #") ("
0 0 14 3 3 #"x_3"
0 0 26 3 1 #" "
0 0 14 3 4 #"x_3a"
0 0 26 3 2 #") "
0 0 14 3 3 #"..."
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 6 #"bound?"
0 0 26 3 1 #" "
0 0 14 3 3 #"x_f"
0 0 26 3 3 #" (("
0 0 14 3 3 #"x_3"
0 0 26 3 1 #" "
0 0 14 3 4 #"x_3a"
0 0 26 3 2 #") "
0 0 14 3 3 #"..."
0 0 26 3 3 #"))]"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"  [("
0 0 14 3 6 #"bound?"
0 0 26 3 1 #" "
0 0 14 3 3 #"x_f"
0 0 26 3 4 #" ())"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"   "
0 0 22 3 2 #"#f"
0 0 26 3 2 #"])"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 16 #";output function"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 19 #"define-metafunction"
0 0 26 3 1 #" "
0 0 14 3 9 #"ruby-core"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 14 3 2 #"OF"
0 0 26 3 1 #" "
0 0 14 3 1 #":"
0 0 26 3 1 #" "
0 0 14 3 2 #"CF"
0 0 26 3 1 #" "
0 0 14 3 2 #"->"
0 0 26 3 1 #" "
0 0 14 3 2 #"ae"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"  [("
0 0 14 3 2 #"OF"
0 0 26 3 2 #" ("
0 0 14 3 2 #"ae"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sto"
0 0 26 3 1 #" "
0 0 14 3 4 #"kont"
0 0 26 3 3 #")) "
0 0 14 3 2 #"ae"
0 0 26 3 2 #"])"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 19 #";;testing functions"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 21 #";short-hand to run rr"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 2 #"rr"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 3 #") ("
0 0 14 3 24 #"apply-reduction-relation"
0 0 26 3 1 #" "
0 0 14 3 6 #"rc-red"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 18 3 23 #";;short-hand to test rr"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 2 #"tc"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 3 #") ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" (["
0 0 14 3 13 #"final-configs"
0 0 26 3 2 #" ("
0 0 14 3 25 #"apply-reduction-relation*"
0 0 26 3 1 #" "
0 0 14 3 6 #"rc-red"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 3 #")])"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 26 3 2 #" ("
0 0 14 3 1 #"="
0 0 26 3 2 #" ("
0 0 14 3 6 #"length"
0 0 26 3 1 #" "
0 0 14 3 13 #"final-configs"
0 0 26 3 2 #") "
0 0 22 3 1 #"1"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 14 3 6 #"equal?"
0 0 26 3 2 #" ("
0 0 14 3 4 #"term"
0 0 26 3 2 #" ("
0 0 14 3 2 #"OF"
0 0 26 3 1 #" "
0 0 29 3 1 #","
0 0 26 3 1 #"("
0 0 14 3 5 #"first"
0 0 26 3 1 #" "
0 0 14 3 13 #"final-configs"
0 0 26 3 4 #"))) "
0 0 14 3 1 #"y"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 12 #";;test cases"
0 0 26 29 1 #"\n"
0 0 18 3 19 #";atomic expressions"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 7 #"test-->"
0 0 26 3 1 #" "
0 0 14 3 6 #"rc-red"
0 0 26 3 2 #" ("
0 0 14 3 4 #"term"
0 0 26 3 2 #" ("
0 0 22 3 1 #"5"
0 0 26 3 8 #" () () ("
0 0 14 3 1 #"k"
0 0 26 3 2 #" ("
0 0 16 3 2 #"do"
0 0 26 3 1 #" "
0 0 14 3 4 #"hole"
0 0 26 3 1 #" "
0 0 22 3 1 #"5"
0 0 26 3 5 #") () "
0 0 14 3 4 #"halt"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 4 #"term"
0 0 26 3 3 #" (("
0 0 16 3 2 #"do"
0 0 26 3 1 #" "
0 0 22 3 1 #"5"
0 0 26 3 1 #" "
0 0 22 3 1 #"5"
0 0 26 3 8 #") () () "
0 0 14 3 4 #"halt"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 7 #"test-->"
0 0 26 3 1 #" "
0 0 14 3 6 #"rc-red"
0 0 26 3 2 #" ("
0 0 14 3 4 #"term"
0 0 26 3 2 #" ("
0 0 20 3 4 #"\"fg\""
0 0 26 3 8 #" () () ("
0 0 14 3 1 #"k"
0 0 26 3 2 #" ("
0 0 16 3 2 #"do"
0 0 26 3 1 #" "
0 0 14 3 4 #"hole"
0 0 26 3 1 #" "
0 0 22 3 1 #"5"
0 0 26 3 5 #") () "
0 0 14 3 4 #"halt"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 4 #"term"
0 0 26 3 3 #" (("
0 0 16 3 2 #"do"
0 0 26 3 1 #" "
0 0 20 3 4 #"\"fg\""
0 0 26 3 1 #" "
0 0 22 3 1 #"5"
0 0 26 3 8 #") () () "
0 0 14 3 4 #"halt"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 7 #"test-->"
0 0 26 3 1 #" "
0 0 14 3 6 #"rc-red"
0 0 26 3 2 #" ("
0 0 14 3 4 #"term"
0 0 26 3 2 #" ("
0 0 20 3 4 #"\"fg\""
0 0 26 3 8 #" () () ("
0 0 14 3 1 #"k"
0 0 26 3 2 #" ("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 14 3 4 #"hole"
0 0 26 3 1 #" "
0 0 22 3 1 #"4"
0 0 26 3 1 #" "
0 0 22 3 1 #"5"
0 0 26 3 5 #") () "
0 0 14 3 4 #"halt"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 4 #"term"
0 0 26 3 3 #" (("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 20 3 4 #"\"fg\""
0 0 26 3 1 #" "
0 0 22 3 1 #"4"
0 0 26 3 1 #" "
0 0 22 3 1 #"5"
0 0 26 3 8 #") () () "
0 0 14 3 4 #"halt"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 7 #"test-->"
0 0 26 3 1 #" "
0 0 14 3 6 #"rc-red"
0 0 26 3 2 #" ("
0 0 14 3 4 #"term"
0 0 26 3 3 #" (("
0 0 14 3 3 #"lam"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 2 #") "
0 0 14 3 1 #"x"
0 0 26 3 4 #") (("
0 0 14 3 1 #"t"
0 0 26 3 1 #" "
0 0 14 3 4 #"g123"
0 0 26 3 6 #")) () "
0 0 14 3 4 #"halt"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 4 #"term"
0 0 26 3 3 #" (("
0 0 14 3 3 #"clo"
0 0 26 3 2 #" ("
0 0 14 3 3 #"lam"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 2 #") "
0 0 14 3 1 #"x"
0 0 26 3 4 #") (("
0 0 14 3 1 #"t"
0 0 26 3 1 #" "
0 0 14 3 4 #"g123"
0 0 26 3 6 #"))) (("
0 0 14 3 1 #"t"
0 0 26 3 1 #" "
0 0 14 3 4 #"g123"
0 0 26 3 6 #")) () "
0 0 14 3 4 #"halt"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 4 #";if "
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 7 #"test-->"
0 0 26 3 1 #" "
0 0 14 3 6 #"rc-red"
0 0 26 3 2 #" ("
0 0 14 3 4 #"term"
0 0 26 3 3 #" (("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 22 3 2 #"#t"
0 0 26 3 1 #" "
0 0 22 3 1 #"3"
0 0 26 3 1 #" "
0 0 22 3 1 #"5"
0 0 26 3 8 #") () () "
0 0 14 3 4 #"halt"
0 0 26 3 4 #")) ("
0 0 14 3 4 #"term"
0 0 26 3 2 #" ("
0 0 22 3 1 #"3"
0 0 26 3 7 #" () () "
0 0 14 3 4 #"halt"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 7 #"test-->"
0 0 26 3 1 #" "
0 0 14 3 6 #"rc-red"
0 0 26 3 2 #" ("
0 0 14 3 4 #"term"
0 0 26 3 3 #" (("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 22 3 2 #"#f"
0 0 26 3 1 #" "
0 0 22 3 1 #"4"
0 0 26 3 1 #" "
0 0 22 3 1 #"5"
0 0 26 3 8 #") () () "
0 0 14 3 4 #"halt"
0 0 26 3 4 #")) ("
0 0 14 3 4 #"term"
0 0 26 3 2 #" ("
0 0 22 3 1 #"5"
0 0 26 3 7 #" () () "
0 0 14 3 4 #"halt"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 7 #"test-->"
0 0 26 3 1 #" "
0 0 14 3 6 #"rc-red"
0 0 26 3 2 #" ("
0 0 14 3 4 #"term"
0 0 26 3 3 #" (("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 22 3 2 #"#t"
0 0 26 3 1 #" "
0 0 22 3 2 #"#f"
0 0 26 3 1 #" "
0 0 22 3 2 #"#t"
0 0 26 3 2 #") "
0 0 22 3 1 #"4"
0 0 26 3 1 #" "
0 0 22 3 1 #"5"
0 0 26 3 8 #") () () "
0 0 14 3 4 #"halt"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 14 3 4 #"term"
0 0 26 3 3 #" (("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 22 3 2 #"#t"
0 0 26 3 1 #" "
0 0 22 3 2 #"#f"
0 0 26 3 1 #" "
0 0 22 3 2 #"#t"
0 0 26 3 9 #") () () ("
0 0 14 3 1 #"k"
0 0 26 3 2 #" ("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 14 3 4 #"hole"
0 0 26 3 1 #" "
0 0 22 3 1 #"4"
0 0 26 3 1 #" "
0 0 22 3 1 #"5"
0 0 26 3 5 #") () "
0 0 14 3 4 #"halt"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 10 #";id lookup"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 7 #"test-->"
0 0 26 3 1 #" "
0 0 14 3 6 #"rc-red"
0 0 26 3 2 #" ("
0 0 14 3 4 #"term"
0 0 26 3 2 #" ("
0 0 14 3 1 #"t"
0 0 26 3 3 #" (("
0 0 14 3 1 #"t"
0 0 26 3 1 #" "
0 0 14 3 4 #"g123"
0 0 26 3 5 #")) (("
0 0 14 3 4 #"g123"
0 0 26 3 1 #" "
0 0 22 3 2 #"#t"
0 0 26 3 3 #")) "
0 0 14 3 4 #"halt"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 14 3 4 #"term"
0 0 26 3 2 #" ("
0 0 22 3 2 #"#t"
0 0 26 3 3 #" (("
0 0 14 3 1 #"t"
0 0 26 3 1 #" "
0 0 14 3 4 #"g123"
0 0 26 3 5 #")) (("
0 0 14 3 4 #"g123"
0 0 26 3 1 #" "
0 0 22 3 2 #"#t"
0 0 26 3 3 #")) "
0 0 14 3 4 #"halt"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 7 #"test-->"
0 0 26 3 1 #" "
0 0 14 3 6 #"rc-red"
0 0 26 3 2 #" ("
0 0 14 3 4 #"term"
0 0 26 3 2 #" ("
0 0 14 3 1 #"t"
0 0 26 3 3 #" (("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 4 #"g124"
0 0 26 3 3 #") ("
0 0 14 3 1 #"t"
0 0 26 3 1 #" "
0 0 14 3 4 #"g123"
0 0 26 3 5 #")) (("
0 0 14 3 4 #"g123"
0 0 26 3 1 #" "
0 0 22 3 2 #"#t"
0 0 26 3 3 #") ("
0 0 14 3 4 #"g124"
0 0 26 3 1 #" "
0 0 22 3 1 #"0"
0 0 26 3 3 #")) "
0 0 14 3 4 #"halt"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 4 #"term"
0 0 26 3 2 #" ("
0 0 22 3 2 #"#t"
0 0 26 3 3 #" (("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 4 #"g124"
0 0 26 3 3 #") ("
0 0 14 3 1 #"t"
0 0 26 3 1 #" "
0 0 14 3 4 #"g123"
0 0 26 3 5 #")) (("
0 0 14 3 4 #"g123"
0 0 26 3 1 #" "
0 0 22 3 2 #"#t"
0 0 26 3 3 #") ("
0 0 14 3 4 #"g124"
0 0 26 3 1 #" "
0 0 22 3 1 #"0"
0 0 26 3 3 #")) "
0 0 14 3 4 #"halt"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 12 #";new binding"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 26 3 2 #" ("
0 0 14 3 2 #"tc"
0 0 26 3 2 #" ("
0 0 14 3 4 #"term"
0 0 26 3 3 #" (("
0 0 16 3 2 #"do"
0 0 26 3 2 #" ("
0 0 16 3 3 #"let"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 22 3 1 #"5"
0 0 26 3 2 #") "
0 0 14 3 1 #"x"
0 0 26 3 8 #") () () "
0 0 14 3 4 #"halt"
0 0 26 3 4 #")) ("
0 0 14 3 4 #"term"
0 0 26 3 1 #" "
0 0 22 3 1 #"5"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 14 #"              "
0 0 14 3 4 #"true"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 15 #";update binding"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 7 #"test-->"
0 0 26 3 1 #" "
0 0 14 3 6 #"rc-red"
0 0 26 3 2 #" ("
0 0 14 3 4 #"term"
0 0 26 3 3 #" (("
0 0 16 3 3 #"let"
0 0 26 3 1 #" "
0 0 14 3 1 #"t"
0 0 26 3 1 #" "
0 0 22 3 1 #"5"
0 0 26 3 4 #") (("
0 0 14 3 1 #"t"
0 0 26 3 1 #" "
0 0 14 3 4 #"g123"
0 0 26 3 5 #")) (("
0 0 14 3 4 #"g123"
0 0 26 3 1 #" "
0 0 22 3 1 #"3"
0 0 26 3 3 #")) "
0 0 14 3 4 #"halt"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 4 #"term"
0 0 26 3 2 #" ("
0 0 22 3 1 #"5"
0 0 26 3 3 #" (("
0 0 14 3 1 #"t"
0 0 26 3 1 #" "
0 0 14 3 4 #"g123"
0 0 26 3 5 #")) (("
0 0 14 3 4 #"g123"
0 0 26 3 1 #" "
0 0 22 3 1 #"5"
0 0 26 3 3 #")) "
0 0 14 3 4 #"halt"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 8 #"test-->>"
0 0 26 3 1 #" "
0 0 14 3 6 #"rc-red"
0 0 26 3 2 #" ("
0 0 14 3 4 #"term"
0 0 26 3 3 #" (("
0 0 16 3 2 #"do"
0 0 26 3 2 #" ("
0 0 16 3 3 #"let"
0 0 26 3 1 #" "
0 0 14 3 1 #"t"
0 0 26 3 1 #" "
0 0 22 3 1 #"5"
0 0 26 3 3 #") ("
0 0 16 3 3 #"let"
0 0 26 3 1 #" "
0 0 14 3 1 #"t"
0 0 26 3 1 #" "
0 0 22 3 1 #"6"
0 0 26 3 5 #")) (("
0 0 14 3 1 #"t"
0 0 26 3 1 #" "
0 0 14 3 4 #"g123"
0 0 26 3 5 #")) (("
0 0 14 3 4 #"g123"
0 0 26 3 1 #" "
0 0 22 3 1 #"0"
0 0 26 3 3 #")) "
0 0 14 3 4 #"halt"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 14 3 4 #"term"
0 0 26 3 2 #" ("
0 0 22 3 1 #"6"
0 0 26 3 3 #" (("
0 0 14 3 1 #"t"
0 0 26 3 1 #" "
0 0 14 3 4 #"g123"
0 0 26 3 5 #")) (("
0 0 14 3 4 #"g123"
0 0 26 3 1 #" "
0 0 22 3 1 #"6"
0 0 26 3 3 #")) "
0 0 14 3 4 #"halt"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 4 #";app"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 26 3 2 #" ("
0 0 14 3 2 #"tc"
0 0 26 3 2 #" ("
0 0 14 3 4 #"term"
0 0 26 3 3 #" (("
0 0 14 3 3 #"app"
0 0 26 3 2 #" ("
0 0 14 3 3 #"lam"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 2 #") "
0 0 14 3 1 #"x"
0 0 26 3 2 #") "
0 0 22 3 1 #"5"
0 0 26 3 8 #") () () "
0 0 14 3 4 #"halt"
0 0 26 3 4 #")) ("
0 0 14 3 4 #"term"
0 0 26 3 1 #" "
0 0 22 3 1 #"5"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 14 #"              "
0 0 22 3 2 #"#t"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 26 3 2 #" ("
0 0 14 3 2 #"tc"
0 0 26 3 2 #" ("
0 0 14 3 4 #"term"
0 0 26 3 3 #" (("
0 0 16 3 2 #"do"
0 0 26 3 2 #" ("
0 0 16 3 3 #"let"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 1 #" "
0 0 22 3 1 #"5"
0 0 26 3 3 #") ("
0 0 16 3 3 #"let"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 2 #" ("
0 0 14 3 3 #"lam"
0 0 26 3 2 #" ("
0 0 14 3 1 #"y"
0 0 26 3 2 #") "
0 0 14 3 1 #"y"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 28 #"                           ("
0 0 16 3 2 #"do"
0 0 26 3 2 #" ("
0 0 14 3 3 #"app"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 22 3 1 #"7"
0 0 26 3 10 #"))) () () "
0 0 14 3 4 #"halt"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 19 #"                  ("
0 0 14 3 4 #"term"
0 0 26 3 1 #" "
0 0 22 3 1 #"7"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 14 #"              "
0 0 22 3 2 #"#t"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 8 #"test-->>"
0 0 26 3 1 #" "
0 0 14 3 6 #"rc-red"
0 0 26 3 2 #" ("
0 0 14 3 4 #"term"
0 0 26 3 3 #" (("
0 0 14 3 3 #"app"
0 0 26 3 2 #" ("
0 0 14 3 3 #"lam"
0 0 26 3 4 #" () "
0 0 22 3 1 #"5"
0 0 26 3 9 #")) () () "
0 0 14 3 4 #"halt"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 4 #"term"
0 0 26 3 2 #" ("
0 0 22 3 1 #"5"
0 0 26 3 7 #" () () "
0 0 14 3 4 #"halt"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 26 3 2 #" ("
0 0 14 3 2 #"tc"
0 0 26 3 2 #" ("
0 0 14 3 4 #"term"
0 0 26 3 3 #" (("
0 0 14 3 3 #"app"
0 0 26 3 2 #" ("
0 0 14 3 3 #"lam"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 1 #"y"
0 0 26 3 2 #") "
0 0 14 3 1 #"y"
0 0 26 3 2 #") "
0 0 22 3 1 #"4"
0 0 26 3 1 #" "
0 0 22 3 1 #"5"
0 0 26 3 8 #") () () "
0 0 14 3 4 #"halt"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 4 #"term"
0 0 26 3 1 #" "
0 0 22 3 1 #"5"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 14 #"              "
0 0 22 3 2 #"#t"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 21 #"                     "
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 18 3 3 #";do"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 7 #"test-->"
0 0 26 3 1 #" "
0 0 14 3 6 #"rc-red"
0 0 26 3 2 #" ("
0 0 14 3 4 #"term"
0 0 26 3 3 #" (("
0 0 16 3 2 #"do"
0 0 26 3 1 #" "
0 0 22 3 1 #"5"
0 0 26 3 8 #") () () "
0 0 14 3 4 #"halt"
0 0 26 3 4 #")) ("
0 0 14 3 4 #"term"
0 0 26 3 2 #" ("
0 0 22 3 1 #"5"
0 0 26 3 7 #" () () "
0 0 14 3 4 #"halt"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 7 #"test-->"
0 0 26 3 1 #" "
0 0 14 3 6 #"rc-red"
0 0 26 3 2 #" ("
0 0 14 3 4 #"term"
0 0 26 3 3 #" (("
0 0 16 3 2 #"do"
0 0 26 3 1 #" "
0 0 22 3 1 #"5"
0 0 26 3 2 #" ("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 22 3 2 #"#t"
0 0 26 3 1 #" "
0 0 22 3 1 #"3"
0 0 26 3 1 #" "
0 0 22 3 1 #"4"
0 0 26 3 9 #")) () () "
0 0 14 3 4 #"halt"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 4 #"term"
0 0 26 3 3 #" (("
0 0 16 3 2 #"do"
0 0 26 3 2 #" ("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 22 3 2 #"#t"
0 0 26 3 1 #" "
0 0 22 3 1 #"3"
0 0 26 3 1 #" "
0 0 22 3 1 #"4"
0 0 26 3 9 #")) () () "
0 0 14 3 4 #"halt"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 8 #"test-->>"
0 0 26 3 1 #" "
0 0 14 3 6 #"rc-red"
0 0 26 3 2 #" ("
0 0 14 3 4 #"term"
0 0 26 3 3 #" (("
0 0 16 3 2 #"do"
0 0 26 3 2 #" ("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 22 3 2 #"#t"
0 0 26 3 1 #" "
0 0 22 3 1 #"3"
0 0 26 3 1 #" "
0 0 22 3 1 #"4"
0 0 26 3 2 #") "
0 0 22 3 1 #"5"
0 0 26 3 8 #") () () "
0 0 14 3 4 #"halt"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 4 #"term"
0 0 26 3 2 #" ("
0 0 22 3 1 #"5"
0 0 26 3 7 #" () () "
0 0 14 3 4 #"halt"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 7 #"test-->"
0 0 26 3 1 #" "
0 0 14 3 6 #"rc-red"
0 0 26 3 2 #" ("
0 0 14 3 4 #"term"
0 0 26 3 3 #" (("
0 0 16 3 2 #"do"
0 0 26 3 1 #" "
0 0 22 3 1 #"5"
0 0 26 3 1 #" "
0 0 22 3 1 #"5"
0 0 26 3 8 #") () () "
0 0 14 3 4 #"halt"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 4 #"term"
0 0 26 3 3 #" (("
0 0 16 3 2 #"do"
0 0 26 3 1 #" "
0 0 22 3 1 #"5"
0 0 26 3 8 #") () () "
0 0 14 3 4 #"halt"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 12 #"test-results"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 4 #"test"
0 0 26 3 1 #")"
0           0
